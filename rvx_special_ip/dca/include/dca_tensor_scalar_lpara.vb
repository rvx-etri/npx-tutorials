// TENSOR_PARA
localparam TENSOR_PARA_SEPARATOR = 100;

localparam TENSOR_PARA_1 = TENSOR_PARA;
localparam _TENSOR_BW_INTEGER_TEMP = TENSOR_PARA_1 % TENSOR_PARA_SEPARATOR;
localparam TENSOR_BW_INTEGER_DEFAULT = 32;
localparam TENSOR_BW_INTEGER = (_TENSOR_BW_INTEGER_TEMP==0)? TENSOR_BW_INTEGER_DEFAULT : _TENSOR_BW_INTEGER_TEMP;

localparam TENSOR_PARA_2 = (TENSOR_PARA_1 / TENSOR_PARA_SEPARATOR);
localparam _TENSOR_SUPPORT_FLOAT_TEMP = TENSOR_PARA_2 % TENSOR_PARA_SEPARATOR;
localparam TENSOR_SUPPORT_FLOAT = (_TENSOR_SUPPORT_FLOAT_TEMP==1)? 1 : 0;

localparam TENSOR_ZERO = (TENSOR_SUPPORT_FLOAT==1)? 0 : 0;

localparam TENSOR_PARA_3 = (TENSOR_PARA_2 / TENSOR_PARA_SEPARATOR);
localparam _TENSOR_BW_EXPONENT_TEMP = TENSOR_PARA_3 % TENSOR_PARA_SEPARATOR;
localparam TENSOR_BW_EXPONENT_DEFAULT = 8;
localparam TENSOR_BW_EXPONENT = (_TENSOR_BW_EXPONENT_TEMP==0)? TENSOR_BW_EXPONENT_DEFAULT : _TENSOR_BW_EXPONENT_TEMP;

localparam TENSOR_PARA_4 = (TENSOR_PARA_3 / TENSOR_PARA_SEPARATOR);
localparam _TENSOR_BW_SIGNIFICAND_TEMP = TENSOR_PARA_4 % TENSOR_PARA_SEPARATOR;
localparam TENSOR_BW_SIGNIFICAND_DEFAULT = 25;
localparam TENSOR_BW_SIGNIFICAND = (_TENSOR_BW_SIGNIFICAND_TEMP==0)? TENSOR_BW_SIGNIFICAND_DEFAULT : _TENSOR_BW_SIGNIFICAND_TEMP;

localparam BW_TENSOR_SCALAR = `MAX(TENSOR_BW_INTEGER,(TENSOR_BW_EXPONENT+TENSOR_BW_SIGNIFICAND)*TENSOR_SUPPORT_FLOAT);

localparam TENSOR_PARA_5 = (TENSOR_PARA_4 / TENSOR_PARA_SEPARATOR);
localparam INVALID_TENSOR_VALUE = TENSOR_PARA_5 % TENSOR_PARA_SEPARATOR;
